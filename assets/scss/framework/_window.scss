.window {
	$chrome-height: 70;
	$chrome-height-no-status: 31;

	$module: '.window';

	background-color: $color-white;
	border: rem(1) solid $color-black;
	box-shadow: rem(4) rem(4) 0 0 rgba(0,0,0,0.2);

	position: absolute;
	top: 0;
	left: 0;
	z-index: 1;



	&.is-active {
		#{$module}__top {
			background-color: lighten($color-lightgrey,5%);
		}
	}
	&:hover {
		.handle {
			display: block !important;
		}
	}

	&.is-dragging {
		.title {
			cursor: grabbing;
		}
	}

	@mixin window-button() {
		flex: 0 0 rem(30);
		width: rem(30);
		height: rem(30);
		padding: rem(5);
		display: inline-flex;
		align-items: center;
		justify-content: center;
		background-color: transparent;
		border: 0;
		cursor: pointer;
		transition: all 0.2s ease;
	}

	hr {
		display: block;
		margin: 0;
		background-color: $color-white;
		height: rem(5);
		border: 0;
		border-bottom: rem(1) solid $color-black;
	}

	&__top {
		background-color: $color-lightgrey;
		display: flex;
		justify-content: space-between;
		

		.title {
			flex: 1 1 100%;
			height: rem(30);
			padding: rem(5);
			overflow: hidden;
			border-bottom: rem(1) solid $color-black;
			
			display: block;
			white-space: nowrap;
			text-overflow: ellipsis;
			text-align: center;
			@include bevel();
			@include headline();
			
			cursor: grab;

		}
		.button {
			@include window-button();
			@include bevel();
			border-left: rem(1) solid $color-black;
			border-bottom: rem(1) solid $color-black;
			
			&:hover {
				background-color: $color-white;
			}
		}

	}
	&__status {
		height: rem(35);
		box-sizing: border-box;
		position: relative;
		background-color: $color-white;
		display: flex;
		justify-content: space-between;
		border-bottom: rem(1) solid $color-black;

		p {
			@include bodytext();

			flex: 1 1 100%;
			overflow: hidden;
			padding: rem(5) rem(10);
			
			display: flex;
			align-items: center;			
		}

		.button {
			@include window-button();
			flex: 0 0 rem(35);
			width: rem(35);
			height: rem(35);
			border-left: rem(1) solid $color-black;

			&:hover {
				background-color: $color-lightgrey;
			}
		}
	}
	&__content {
		overflow-x: hidden;
		overflow-y: scroll;		
		height: calc(100% - #{rem($chrome-height)});

		scrollbar-width: auto;
		scrollbar-color: $color-white $color-white;

		&::-webkit-scrollbar {
			width: rem(29);
		}
		&::-webkit-scrollbar-track {
			background: $color-lightgrey;
			border-left: rem(1) solid $color-black;
		}
		&::-webkit-scrollbar-thumb {
			// background: linear-gradient(0deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 40%, rgba(0,0,0,1) 42%, rgba(255,255,255,1) 44%, rgba(255,255,255,1) 56%, rgba(0,0,0,1) 58%, rgba(255,255,255,1) 60%, rgba(255,255,255,0) 100%);
			background-color: $color-white;
			padding: rem(10);
			border-radius: 0;
			border: rem(1) solid $color-black;
			border-right: 0;
			box-shadow: 0 rem(3) 0 0 rgba(0,0,0,0.2);
		}	
	}
	
	&--tight {
		#{$module}__content {
			overflow: visible;
		}
		.handle {
			display: none;
		}
	}

	&--full-screen {
		width: 100vw !important;
		height: 100vh !important;
		transform: translate(0,0) !important;

		.handle {
			display: none;
		}
	}

	&--no-status {
		#{$module}__content {
			height: calc(100% - #{rem($chrome-height-no-status)});
		}
	}
	
	&--assistant {
		z-index: $z-index-assistant !important;

		.title {			
			cursor: default;
		}

		position: fixed;
		top: auto;
		left: rem(10);
		right: rem(10);
		bottom: rem(45 + 10 + 30); //ios navbar + gutter + support (heights)

		@include mq($from: screen-sm) {
			top: rem(60);
			right: rem(20);
			bottom: auto;
			left: auto;
			width: rem(276);
		}
		@include mq($from: screen-md) {
			top: rem(80);
			right: rem(30);
		}

		#{$module}__content {
			height: auto;
		}
	}


	.vdr {
		touch-action: none;
		position: absolute;
		box-sizing: border-box;
		border: rem(1) dashed $color-black;
	}
	.handle {
		box-sizing: border-box;
		position: absolute;
		width: rem(30);
		height: rem(30);
		background: #EEE;
		border: rem(1) solid $color-black;
		display: block;

		&:after,
		&:before {
			content:'';
			display: inline-block;
			position: absolute;
			height: rem(1);
			left: rem(10);
			bottom: rem(8);
			background-color: $color-black;
		}
		&:after {
			width: rem(16);
			transform: rotate(-45deg);
		}
		&:before {
			width: rem(9);
			transform: rotate(-45deg) translate(3px, 6px);
		}
	}
	.handle-br {
		bottom: rem(-1);
		right: rem(-1);
		cursor: nwse-resize;	
	}	

}