.login {
	position: absolute;
	z-index: 100;
	height: 100vh;
	width: 100%;

	display: grid;
	place-items: center;

	overflow: hidden;
	color: var(--color-ss-blush);
	// background-color: var(--color-ss-blue);

	font-size: 8vw;
	line-height: 0.9;
	font-weight: 500;
	text-transform: uppercase;

	transition: background-color 0s 2s;

	&--background {
		transition: background-color 0s;
		background-color: var(--color-ss-blue);
	}

	h1 {
		font-size: 17.5vh;
		line-height: 0.8;
		word-break: break-word;
		hyphens: auto;
		width: 4em;
		user-select: none;
	}
}

.login-input {
	display: flex;
	align-items: center;
	min-height: 100vh;
	min-height: -webkit-fill-available;
	text-align: center;

	background-size: cover;

	font-size: 7vw;
	letter-spacing: 0;

	input {
		opacity: 0;
		position: fixed;
	}

	@keyframes fade-out {
		to {
			opacity: 0;
		}
	}
	@keyframes fade-in {
		to {
			opacity: 1;
		}
	}

	&__welcome {
		animation: fade-out 1s 2s forwards;
	}

	&__all {
		opacity: 0;
		animation: fade-in 1s 2s forwards;
	}

	.form {
		position: relative;
		display: flex;
		flex-direction: column;
		justify-content: space-between;

		height: 100%;

		@include mq($from: screen-md) {
			margin-bottom: 0;
		}

		h1 {
			font-size: 1em;
			max-width: 10.3em;
			display: inline-block;
		}

		button {
			font-family: $font-sansserif;
			color: var(--color-secondary);

			@include windowtitle();
			background-color: var(--color-primary);
			padding: rem(10);

			svg {
				display: inline-flex;
				width: rem(80);
				height: rem(80);
				fill: currentColor;
			}

			&.is-invalid {
				color: $color-black;
				background-color: $color-red;
			}
		}
	}

	@keyframes blink {
		0% {
			opacity: 0;
		}

		49% {
			opacity: 0;
		}

		50% {
			opacity: 1;
		}

		100% {
			opacity: 1;
		}
	}

	&__message {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		width: 100%;

		span {
			animation: blink 1.5s infinite linear;
			font-size: 2em;
			margin-top: -0.5em;
		}
	}
}

.intro-copenhill {
	position: absolute;
	inset: 0;
	font-weight: 600;

	cursor: pointer;

	&__background {
		position: absolute;
		width: 100%;
		height: 100%;
		object-position: center;
		object-fit: cover;
		inset: 0;
	}

	&__text {
		--animation-duration: 3s;
		--animation-ease: var(--ease-in-out-quint);

		position: absolute;
		inset: 0;
		user-select: none;

		span {
			display: inline-block;
		}

		> span {
			position: absolute;
			font-size: 75px;
			left: 50%;
			top: 50%;
			transform: translate(-50%, -50%);

			@include mq(screen-md) {
				font-size: 200px;
			}
		}

		.higher {
			display: inline-flex;
			color: var(--color-ss-blue);

			@keyframes higher {
				from {
					transform: translate(-160vw, 88vw);

					@include mq(screen-md) {
						transform: translate(-79vw, 44vw);
					}
				}
			}

			@keyframes higher-out {
				to {
					transform: translate(-179vw, 144vw);

					@include mq(screen-md) {
						transform: translate(-79vw, 44vw);
					}
				}
			}

			&--animation {
				animation: higher var(--animation-duration) var(--animation-ease)
					forwards;

				.outro & {
					animation: higher-out var(--animation-duration) var(--animation-ease)
						forwards;
				}
			}

			&--translate {
				transform: translate(-37px, -71px);

				@include mq(screen-md) {
					transform: translate(-56px, -161px);
				}
			}

			&--rotate {
				transform: rotate(-28deg);
			}
		}

		.love {
			display: inline-flex;
			color: var(--color-ss-yellow);
			writing-mode: vertical-rl;
			text-orientation: upright;
			letter-spacing: -0.3em;

			@keyframes love {
				from {
					transform: translateY(-163vw);

					@include mq(screen-md) {
						transform: translateY(-63vw);
					}
				}
			}

			@keyframes love-out {
				to {
					transform: translateY(-163vw);

					@include mq(screen-md) {
						transform: translateY(-63vw);
					}
				}
			}

			&--animation {
				animation: love calc(var(--animation-duration) + 0.1s)
					var(--animation-ease) forwards;

				.outro & {
					animation: love-out calc(var(--animation-duration) + 0.1s)
						var(--animation-ease) forwards;
				}
			}

			&--translate {
				transform: translate(151px, -60px);

				@include mq(screen-md) {
					transform: translate(410px, -142px);
				}
			}
		}

		.ganni {
			display: inline-flex;
			color: var(--color-ss-blush);

			@keyframes ganni {
				from {
					transform: translateX(-203vw);

					@include mq(screen-md) {
						transform: translateX(-103vw);
					}
				}
			}

			@keyframes ganni-out {
				to {
					transform: translateX(-203vw);

					@include mq(screen-md) {
						transform: translateX(-103vw);
					}
				}
			}

			&--animation {
				animation: ganni calc(var(--animation-duration) + 0.2s)
					var(--animation-ease) forwards;

				.outro & {
					animation: ganni-out calc(var(--animation-duration) + 0.2s)
						var(--animation-ease) forwards;
				}
			}

			&--translate {
				transform: translate(-63px, 52px);

				@include mq(screen-md) {
					transform: translate(-171px, 155px);
				}
			}
		}

		.ss22 {
			color: white;
			display: inline-flex;
			align-items: flex-start;
			white-space: nowrap;

			@keyframes ss22 {
				from {
					transform: translateY(163vw);

					@include mq(screen-md) {
						transform: translateY(63vw);
					}
				}
			}

			@keyframes ss22-out {
				to {
					transform: translateY(163vw);

					@include mq(screen-md) {
						transform: translateY(63vw);
					}
				}
			}

			&--animation {
				animation: ss22 calc(var(--animation-duration) + 0.3s)
					var(--animation-ease) forwards;

				.outro & {
					animation: ss22-out calc(var(--animation-duration) + 0.3s)
						var(--animation-ease) forwards;
				}
			}

			&--translate {
				transform: translate(95px, -8px);

				@include mq(screen-md) {
					transform: translate(250px, 0);
				}
			}

			.small {
				transform: scale(0.8);
				transform-origin: 100% 30%;
			}

			&--rotate {
				transform: rotate(90deg);
			}
		}
	}
}
